{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Desktop\\\\portfolio\\\\myportfolio\\\\src\\\\components\\\\About.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container, Button, Card, CardBody, CardHeader, CardFooter, CardImg, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\n\nvar Spinner = require(\"react-spinkit\");\n\nvar About =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(About, _Component);\n\n  function About(props) {\n    var _this;\n\n    _classCallCheck(this, About);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(About).call(this, props));\n\n    _this.hideSpinner = function () {\n      _this.setState({\n        loading: false\n      });\n    };\n\n    _this.state = {\n      modal: false,\n      loading: true\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(About, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"About Me\")), React.createElement(\"div\", {\n        class: \"subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Lorum Ipsum\"), React.createElement(ScrollAnimation, (_React$createElement = {\n        animateIn: \"bounceInLeft\",\n        duration: \"0.8\",\n        animateOut: \"bounceOutRight\"\n      }, _defineProperty(_React$createElement, \"duration\", \"0.8\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"personal-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Sam Bell\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/human.jpg\",\n        class: \"img-fluid img-rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Hey, I'm a Software Developer from Newcastle, I can help you build your next product.\"), React.createElement(\"p\", {\n        className: \"about-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"I have been a part of the \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Accenture\"), \" team for the past year and a half, honing my current skillset and picking up a lot of useful tips and tricks along the way! I have been utilizing \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"ReactJS\"), \" into my front end capabilities and even had the chance to help deliver a\", \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"front end application\"), \" that would be used by professional athletes to prepare for the Olympics! I am keen to improve these skills even more and hopefully one day be able to move onto to similar, complex applications that I will be able to lend my knowledge to. Besdies front end, I Have also worked on a completely different spectrum of work, aiding in creating \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"3D Models\"), \" and virtual enviroments for both the\", \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"XR Capability\"), \", and\", \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"a well known european diy retailer\"), \". The Application is being used all over the world by users who want to visualize what their items look like in a real-space, without actually having to buy the item first.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"seperator-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"personal-photos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/bnq.gif\",\n        className: \"img-fluid pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bnq-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Virtual Furniture\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"One of the first projects that I worked on at Accenture involved the creation and optimization of a variety of 3D models. The processes involved included modeling and texturing, as well as implementing the final product into xCode to handle physical based materials on a number of the models. Since these models were to be used on a mobile application certain guidelines were put in order that make the process slightly more tricky, including a minimum poly count and well as texture size limit. The model's ranked from anything as simple as a desk lamp to something more big and complex like a garden shed.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Here you can see an animated example of the final application and how it would be used to place down one of the models inside a real-time space. Users would utilize this application to be able to get a good look at how an item of furniture might look inside of their house without ever having to go out and actually purchase that item first. Overall, a very exciting project to work on which helped me really improved not only my modelling and texturing skills, but my problem solving skills too. Definitely a line of work I would love to do again further down the line.\")))), React.createElement(\"div\", {\n        className: \"seperator-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/cherrypicker.png\",\n        class: \"img-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"modal-button-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.props.buttonLabel, \"Click to watch video\"))), React.createElement(Col, {\n        md: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cherry-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Cherry Picker\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"The Cherry Picker was another 3D based project I've worked on during my time at Accenture, and a very beneficial one at that. The purpose of the Cherry Picker was to offer trainees a safe, virtual environment in which they could realistically train with a cherry picker without risk of harm or damage. Working alongside a very talented group, I was tasked with a number of different objectives including the likes of modelling, animating and texturing. My main contributions involved modelling certain parts of the cherry picker, creating a puzzle box for users to access via the cherry picker, and animating hands that would work flawlessly with VR controls and look realistic when gripping certain objects like spanners and drills.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"The rest of the team worked on creating other vital elements such as the environment, the physics, the networking capabilities and general functionality.\")))), React.createElement(\"div\", {\n        className: \"seperator-line-extra\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/tg.jpg\",\n        class: \"img-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"website-link-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://thievesguild.github.io/index.html\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Link to site\")))), React.createElement(Col, {\n        md: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cherry-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Thieves Guild Site\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"One of my first real attempts at a dynamic site came bundled in the form of a fan-site for a game that I had recently just put over 200+ hours into. This was my first actual attempt at using and implementing Bootstrap and Javascript into one of my sites, and came out with pretty neat looking results that didn't look too basic or boring. The site served as an information resource were user could find tips and general information about the game all in one place. Although only a fan-site and nothing that really gained any profit, I was at one point maintaining over 200-300 viewers (found via Google Analytics). This was a very fun and colorful project to work on and one that I've kept hosted for a while now to look back on and see how far my work has come along.\")))), React.createElement(\"div\", {\n        className: \"seperator-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/XR.png\",\n        class: \"img-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cherry-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Interactive Learning Lab\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"One of my more recent projects had me tasked with the modelling and optimization of a \\\"XR Learning Lab\\\". After several iterations and redesigns of what the lab was going to actually look like, we finally decided to go with a simple white wash design that would still grab the users attention as soon as they opened up the application. This project brought it's own complications with having to realistically display physical based materials as well as still run at a smooth framerate when being used on VR hardware. Besides the 3D modelling I always worked on several parts of the applications functionality to make it more accessible and user friendly.\"))))))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Cherry Picker\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-video-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        className: \"cube-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sk-folding-cube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sk-cube1 sk-cube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sk-cube2 sk-cube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sk-cube4 sk-cube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sk-cube3 sk-cube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }))) : null, React.createElement(\"iframe\", {\n        onLoad: this.hideSpinner,\n        id: \"kmsembed-0_0gfeleq8\",\n        width: \"400\",\n        height: \"300\",\n        src: \"https://mediaexchange.accenture.com/embed/secure/iframe/entryId/0_0gfeleq8/uiConfId/27188232\",\n        class: \"kmsembed\",\n        allowfullscreen: true,\n        webkitallowfullscreen: true,\n        mozAllowFullScreen: true,\n        allow: \"autoplay *; fullscreen *; encrypted-media *\",\n        frameborder: \"0\",\n        title: \"Cherry Picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Close\")))));\n    }\n  }]);\n\n  return About;\n}(Component);\n\nexport { About as default };","map":{"version":3,"sources":["C:\\Users\\Sam\\Desktop\\portfolio\\myportfolio\\src\\components\\About.js"],"names":["React","Component","Col","Row","Container","Button","Card","CardBody","CardHeader","CardFooter","CardImg","Modal","ModalHeader","ModalBody","ModalFooter","ScrollAnimation","Spinner","require","About","props","hideSpinner","setState","loading","state","modal","toggle","bind","prevState","buttonLabel","className"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardImg,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport ScrollAnimation from \"react-animate-on-scroll\";\r\nvar Spinner = require(\"react-spinkit\");\r\n\r\nexport default class About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      loading: true\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  hideSpinner = () => {\r\n    this.setState({\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"about\">\r\n          <div className=\"name\">\r\n            <h1>About Me</h1>\r\n          </div>\r\n          <div class=\"subtitle\">Lorum Ipsum</div>\r\n          <ScrollAnimation\r\n            animateIn=\"bounceInLeft\"\r\n            duration=\"0.8\"\r\n            animateOut=\"bounceOutRight\"\r\n            duration=\"0.8\"\r\n          >\r\n            <Container>\r\n              <div className=\"personal-section\">\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <Card>\r\n                      <CardHeader>Sam Bell</CardHeader>\r\n                      <CardBody>\r\n                        <img\r\n                          src=\"images/human.jpg\"\r\n                          class=\"img-fluid img-rounded\"\r\n                        />\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <h1>\r\n                      Hey, I'm a Software Developer from Newcastle, I can help\r\n                      you build your next product.\r\n                    </h1>\r\n                    <p className=\"about-text\">\r\n                      I have been a part of the <span>Accenture</span> team for\r\n                      the past year and a half, honing my current skillset and\r\n                      picking up a lot of useful tips and tricks along the way!\r\n                      I have been utilizing <span>ReactJS</span> into my front\r\n                      end capabilities and even had the chance to help deliver a{\" \"}\r\n                      <span>front end application</span> that would be used by\r\n                      professional athletes to prepare for the Olympics! I am\r\n                      keen to improve these skills even more and hopefully one\r\n                      day be able to move onto to similar, complex applications\r\n                      that I will be able to lend my knowledge to. Besdies front\r\n                      end, I Have also worked on a completely different spectrum\r\n                      of work, aiding in creating <span>3D Models</span> and\r\n                      virtual enviroments for both the{\" \"}\r\n                      <span>XR Capability</span>, and{\" \"}\r\n                      <span>a well known european diy retailer</span>. The\r\n                      Application is being used all over the world by users who\r\n                      want to visualize what their items look like in a\r\n                      real-space, without actually having to buy the item first.\r\n                      <br />\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"seperator-line\" />\r\n                <div className=\"personal-photos\">\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <img\r\n                        src=\"images/bnq.gif\"\r\n                        className=\"img-fluid pull-right\"\r\n                      />\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                      <div className=\"bnq-text\">\r\n                        <h2>Virtual Furniture</h2>\r\n                        <p>\r\n                          One of the first projects that I worked on at\r\n                          Accenture involved the creation and optimization of a\r\n                          variety of 3D models. The processes involved included\r\n                          modeling and texturing, as well as implementing the\r\n                          final product into xCode to handle physical based\r\n                          materials on a number of the models. Since these\r\n                          models were to be used on a mobile application certain\r\n                          guidelines were put in order that make the process\r\n                          slightly more tricky, including a minimum poly count\r\n                          and well as texture size limit. The model's ranked\r\n                          from anything as simple as a desk lamp to something\r\n                          more big and complex like a garden shed.\r\n                        </p>\r\n                        <p>\r\n                          Here you can see an animated example of the final\r\n                          application and how it would be used to place down one\r\n                          of the models inside a real-time space. Users would\r\n                          utilize this application to be able to get a good look\r\n                          at how an item of furniture might look inside of their\r\n                          house without ever having to go out and actually\r\n                          purchase that item first. Overall, a very exciting\r\n                          project to work on which helped me really improved not\r\n                          only my modelling and texturing skills, but my problem\r\n                          solving skills too. Definitely a line of work I would\r\n                          love to do again further down the line.\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"seperator-line\" />\r\n                  <Row>\r\n                    <Col md=\"5\">\r\n                      <img src=\"images/cherrypicker.png\" class=\"img-fluid\" />\r\n                      <div className=\"modal-button-holder\">\r\n                        <Button color=\"danger\" onClick={this.toggle}>\r\n                          {this.props.buttonLabel}\r\n                          Click to watch video\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"7\">\r\n                      <div className=\"cherry-text\">\r\n                        <h2>Cherry Picker</h2>\r\n                        <p>\r\n                          The Cherry Picker was another 3D based project I've\r\n                          worked on during my time at Accenture, and a very\r\n                          beneficial one at that. The purpose of the Cherry\r\n                          Picker was to offer trainees a safe, virtual\r\n                          environment in which they could realistically train\r\n                          with a cherry picker without risk of harm or damage.\r\n                          Working alongside a very talented group, I was tasked\r\n                          with a number of different objectives including the\r\n                          likes of modelling, animating and texturing. My main\r\n                          contributions involved modelling certain parts of the\r\n                          cherry picker, creating a puzzle box for users to\r\n                          access via the cherry picker, and animating hands that\r\n                          would work flawlessly with VR controls and look\r\n                          realistic when gripping certain objects like spanners\r\n                          and drills.\r\n                        </p>\r\n                        <p>\r\n                          The rest of the team worked on creating other vital\r\n                          elements such as the environment, the physics, the\r\n                          networking capabilities and general functionality.\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"seperator-line-extra\" />\r\n                  <Row>\r\n                    <Col md=\"5\">\r\n                      <img src=\"images/tg.jpg\" class=\"img-fluid\" />\r\n                      <div className=\"website-link-button\">\r\n                        <Button color=\"dark\">\r\n                          <a href=\"https://thievesguild.github.io/index.html\">\r\n                            Link to site\r\n                          </a>\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"7\">\r\n                      <div className=\"cherry-text\">\r\n                        <h2>Thieves Guild Site</h2>\r\n                        <p>\r\n                          One of my first real attempts at a dynamic site came\r\n                          bundled in the form of a fan-site for a game that I\r\n                          had recently just put over 200+ hours into. This was\r\n                          my first actual attempt at using and implementing\r\n                          Bootstrap and Javascript into one of my sites, and\r\n                          came out with pretty neat looking results that didn't\r\n                          look too basic or boring. The site served as an\r\n                          information resource were user could find tips and\r\n                          general information about the game all in one place.\r\n                          Although only a fan-site and nothing that really\r\n                          gained any profit, I was at one point maintaining over\r\n                          200-300 viewers (found via Google Analytics). This was\r\n                          a very fun and colorful project to work on and one\r\n                          that I've kept hosted for a while now to look back on\r\n                          and see how far my work has come along.\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"seperator-line\" />\r\n                  <Row>\r\n                    <Col md=\"5\">\r\n                      <img src=\"images/XR.png\" class=\"img-fluid\" />\r\n                    </Col>\r\n                    <Col md=\"7\">\r\n                      <div className=\"cherry-text\">\r\n                        <h2>Interactive Learning Lab</h2>\r\n                        <p>\r\n                          One of my more recent projects had me tasked with the\r\n                          modelling and optimization of a \"XR Learning Lab\".\r\n                          After several iterations and redesigns of what the lab\r\n                          was going to actually look like, we finally decided to\r\n                          go with a simple white wash design that would still\r\n                          grab the users attention as soon as they opened up the\r\n                          application. This project brought it's own\r\n                          complications with having to realistically display\r\n                          physical based materials as well as still run at a\r\n                          smooth framerate when being used on VR hardware.\r\n                          Besides the 3D modelling I always worked on several\r\n                          parts of the applications functionality to make it\r\n                          more accessible and user friendly.\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </div>\r\n            </Container>\r\n          </ScrollAnimation>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            isOpen={this.state.modal}\r\n            toggle={this.toggle}\r\n            className={this.props.className}\r\n          >\r\n            <ModalHeader toggle={this.toggle}>Cherry Picker</ModalHeader>\r\n            <ModalBody>\r\n              <div className=\"modal-video-holder\">\r\n              \r\n                {this.state.loading ? (\r\n                  <div className=\"cube-container\">\r\n                 <div className=\"sk-folding-cube\">\r\n                 <div className=\"sk-cube1 sk-cube\"></div>\r\n                 <div className=\"sk-cube2 sk-cube\"></div>\r\n                 <div className=\"sk-cube4 sk-cube\"></div>\r\n                 <div className=\"sk-cube3 sk-cube\"></div>\r\n               </div>\r\n               </div>\r\n                ) : null}\r\n                <iframe\r\n                  onLoad={this.hideSpinner}\r\n                  id=\"kmsembed-0_0gfeleq8\"\r\n                  width=\"400\"\r\n                  height=\"300\"\r\n                  src=\"https://mediaexchange.accenture.com/embed/secure/iframe/entryId/0_0gfeleq8/uiConfId/27188232\"\r\n                  class=\"kmsembed\"\r\n                  allowfullscreen\r\n                  webkitallowfullscreen\r\n                  mozAllowFullScreen\r\n                  allow=\"autoplay *; fullscreen *; encrypted-media *\"\r\n                  frameborder=\"0\"\r\n                  title=\"Cherry Picker\"\r\n                />\r\n              </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            \r\n              <Button color=\"secondary\" onClick={this.toggle}>\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}